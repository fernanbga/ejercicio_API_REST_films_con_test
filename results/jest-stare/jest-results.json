{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 3,
  "numPassedTests": 9,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 3,
  "numTotalTests": 9,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1753096485522,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1753096486032,
        "runtime": 321,
        "slow": false,
        "start": 1753096485711
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/fernanburgos/Desktop/Kurtoskalacs/ejercicio_API_REST_films_con_test/test/env.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Environment setup"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Environment setup should have a .env file in the root directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have a .env file in the root directory"
        },
        {
          "ancestorTitles": [
            "Environment setup"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Environment setup should have API_KEY defined in the .env file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have API_KEY defined in the .env file"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1753096486626,
        "runtime": 915,
        "slow": false,
        "start": 1753096485711
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/fernanburgos/Desktop/Kurtoskalacs/ejercicio_API_REST_films_con_test/test/fetchFilms.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "fetchFilm utility"
          ],
          "duration": 411,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fetchFilm utility should return movie details for a known movie",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return movie details for a known movie"
        },
        {
          "ancestorTitles": [
            "fetchFilm utility"
          ],
          "duration": 178,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fetchFilm utility should return null for a non-existent movie",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for a non-existent movie"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1753096486785,
        "runtime": 1076,
        "slow": false,
        "start": 1753096485709
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/fernanburgos/Desktop/Kurtoskalacs/ejercicio_API_REST_films_con_test/test/films.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Films API routes"
          ],
          "duration": 299,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Films API routes should fetch a movie by title",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch a movie by title"
        },
        {
          "ancestorTitles": [
            "Films API routes"
          ],
          "duration": 240,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Films API routes should return 404 for a non-existent movie",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 for a non-existent movie"
        },
        {
          "ancestorTitles": [
            "Films API routes"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Films API routes should add a new movie",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a new movie"
        },
        {
          "ancestorTitles": [
            "Films API routes"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Films API routes should update an existing movie",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update an existing movie"
        },
        {
          "ancestorTitles": [
            "Films API routes"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Films API routes should delete an existing movie",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete an existing movie"
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false
}